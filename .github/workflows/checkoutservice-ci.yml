name: checkoutservice-ci

on:
  pull_request:
    branches:
      - myfeature1
    paths:
      - "src/checkoutservice/**"
      - ".github/workflows/checkoutservice-ci.yml"

jobs:
  # ---------- Build & Unit Test ----------
  build:
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Download and verify Go modules
        run: |
          cd src/checkoutservice
          go mod tidy
          go mod download
          go mod verify

      - name: Build
        run: |
          cd src/checkoutservice
          go build -v ./...

      - name: Run Unit Tests
        run: |
          cd src/checkoutservice
          go test -v ./...

  # ---------- Code Quality & Lint ----------
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check (golangci-lint)
    needs: build   # runs after build, parallel with docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59.1
          working-directory: src/checkoutservice
          args: --timeout=5m

  # ---------- Docker Build & Push ----------
  docker:
    runs-on: ubuntu-latest
    name: Build & Push Docker Image
    needs: build   # depends only on build (parallel to lint)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ✅ Login early to prevent Docker Hub rate limits
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # ✅ Pre-download Go modules before Docker build
      - name: Pre-cache Go modules
        run: |
          cd src/checkoutservice
          go mod tidy
          go mod download
          go mod verify

      # ✅ No build summary or SBOM output
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./src/checkoutservice
          file: ./src/checkoutservice/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/checkoutservice:${{ github.run_id }}
          provenance: false        # disables Build Summary
          sbom: false              # disables SBOM
          outputs: type=registry   # no artifact generated

  # ---------- Update Kubernetes Manifest ----------
  updatek8s:
    runs-on: ubuntu-latest
    name: Update K8s Deployment
    needs: docker   # runs after docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}
          fetch-depth: 0

      - name: Checkout target branch
        run: |
          git fetch origin ${{ github.head_ref || github.ref_name }}
          git checkout ${{ github.head_ref || github.ref_name }}

      - name: Update image tag in Kubernetes manifest
        run: |
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/checkoutservice:${{ github.run_id }}|" kubernetes/checkoutservice/deploy.yml

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git config user.email "ashwiniethiraj@gmail.com"
          git config user.name "ashwiniethiraj"
          git add kubernetes/checkoutservice/deploy.yml
          git commit -m "ci: update checkoutservice image tag" || echo "No changes to commit"
          git pull --rebase origin ${{ github.head_ref || github.ref_name }}
          git push origin HEAD:${{ github.head_ref || github.ref_name }}
