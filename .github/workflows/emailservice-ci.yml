name: emailservice-ci

on:
  pull_request:
    branches:
      - main
    paths:
      - "src/emailservice/**"
      - ".github/workflows/emailservice-ci.yml"

jobs:
  # ---------- Build & Test ----------
  build:
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        working-directory: src/emailservice
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-test.in ]; then
            pip install -r requirements-test.in
          fi

      - name: Run Unit Tests
        working-directory: src/emailservice
        run: |
          python -m unittest discover -s . -p "test_*.py" -v

  # ---------- Code Quality ----------
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check (Flake8 + Black)
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linters
        run: |
          pip install flake8 black

      - name: Run Flake8
        working-directory: src/emailservice
        run: flake8 . --max-line-length=100 --ignore=E501,W503

      - name: Run Black (check mode)
        working-directory: src/emailservice
        run: black . --check || true

  # ---------- Docker Build & Push ----------
  docker:
    runs-on: ubuntu-latest
    name: Build & Push Docker Image
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./src/emailservice
          file: ./src/emailservice/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/emailservice:${{ github.run_id }}
          provenance: false
          sbom: false
          outputs: type=registry

  # ---------- Update Kubernetes Manifest ----------
  updatek8s:
    runs-on: ubuntu-latest
    name: Update K8s Deployment
    needs: docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}
          fetch-depth: 0

      - name: Checkout target branch
        run: |
          git fetch origin ${{ github.head_ref || github.ref_name }}
          git checkout ${{ github.head_ref || github.ref_name }}

      - name: Update image tag in Kubernetes manifest
        run: |
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/emailservice:${{ github.run_id }}|" kubernetes/emailservice/deploy.yml

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git config user.email "ashwiniethiraj@gmail.com"
          git config user.name "ashwiniethiraj"

          git fetch origin ${{ github.head_ref || github.ref_name }}
          git stash push --include-untracked || true
          git rebase origin/${{ github.head_ref || github.ref_name }} || git rebase --skip
          git stash pop || true

          git add kubernetes/emailservice/deploy.yml
          git commit -m "ci: update emailservice image tag" || echo "No changes to commit"
          git push origin HEAD:${{ github.head_ref || github.ref_name }} --force-with-lease
