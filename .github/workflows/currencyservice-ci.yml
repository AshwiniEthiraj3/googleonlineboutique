name: currencyservice-ci

on:
  pull_request:
    branches:
      - myfeature1
    paths:
      - "src/currencyservice/**"
      - ".github/workflows/currencyservice-ci.yml"

jobs:
  # ---------- Build & Test ----------
  build:
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/currencyservice/package-lock.json

      - name: Install dependencies
        working-directory: src/currencyservice
        run: npm ci

      - name: Run Tests (skip for now)
        run: echo "No tests defined for currencyservice"

  # ---------- Code Quality (ESLint) ----------
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check (ESLint)
    needs: build   # runs after build, parallel with docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        working-directory: src/currencyservice
        run: npm ci

      - name: Run ESLint
        working-directory: src/currencyservice
        run: npx eslint . --max-warnings=0 || true

  # ---------- Docker Build & Push ----------
  docker:
    runs-on: ubuntu-latest
    name: Build & Push Docker Image
    needs: build   # depends only on build (parallel with lint)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ✅ Login before pull/build to avoid rate limits
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # ✅ Disable build summary and SBOM
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./src/currencyservice
          file: ./src/currencyservice/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/currencyservice:${{ github.run_id }}
          provenance: false
          sbom: false
          outputs: type=registry

  # ---------- Update Kubernetes Manifest ----------
  updatek8s:
    runs-on: ubuntu-latest
    name: Update K8s Deployment
    needs: docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}
          fetch-depth: 0

      - name: Checkout target branch
        run: |
          git fetch origin ${{ github.head_ref || github.ref_name }}
          git checkout ${{ github.head_ref || github.ref_name }}

      - name: Update image tag in Kubernetes manifest
        run: |
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/currencyservice:${{ github.run_id }}|" kubernetes/currencyservice/deploy.yml

      # ✅ Safe rebase and push after manifest update
      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git config user.email "ashwiniethiraj@gmail.com"
          git config user.name "ashwiniethiraj"

          git fetch origin ${{ github.head_ref || github.ref_name }}
          git stash push --include-untracked || true
          git rebase origin/${{ github.head_ref || github.ref_name }} || git rebase --skip
          git stash pop || true

          git add kubernetes/currencyservice/deploy.yml
          git commit -m "ci: update currencyservice image tag" || echo "No changes to commit"
          git push origin HEAD:${{ github.head_ref || github.ref_name }} --force-with-lease
